@model IEnumerable<eBook_Library_Service.Models.Book>
@{
    ViewBag.Title = "Books";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Book Card Styling */
    .book-card {
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        background-color: #fff;
        margin-bottom: 20px;
        width: 200px; /* Smaller card width */
        text-decoration: none; /* Remove underline from anchor tag */
        color: inherit; /* Inherit text color */
    }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        .book-card img {
            width: 100%;
            height: 150px; /* Smaller image height */
            object-fit: cover; /* Ensures the image covers the area without distortion */
        }

    .book-card-body {
        padding: 12px;
    }

    .book-card-title {
        font-size: 1rem; /* Smaller font size */
        font-weight: bold;
        margin-bottom: 8px;
        color: #333;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis; /* Truncate long titles */
    }

    .book-card-description {
        font-size: 0.75rem; /* Smaller font size */
        color: #555;
        margin-bottom: 8px;
        display: -webkit-box;
        -webkit-line-clamp: 2; /* Limit description to 2 lines */
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .book-card-meta {
        font-size: 0.75rem; /* Smaller font size */
        color: #777;
        margin-bottom: 8px;
    }

        .book-card-meta strong {
            color: #333;
        }

    .discount-section {
        background-color: #fff3e6;
        padding: 6px;
        border-radius: 6px;
        margin-bottom: 8px;
    }

    .discount-timer {
        font-size: 0.75rem; /* Smaller font size */
        color: #e67e22;
        margin-bottom: 4px;
    }

    .discount-percent {
        font-size: 0.875rem; /* Smaller font size */
        font-weight: bold;
        color: #e67e22;
        margin-bottom: 4px;
    }

    .original-price {
        font-size: 0.75rem; /* Smaller font size */
        color: #777;
        text-decoration: line-through;
    }

    .pricing-section {
        margin-bottom: 8px;
    }

    .borrow-price, .buy-price {
        font-size: 0.875rem; /* Smaller font size */
        color: #333;
        margin-bottom: 4px;
    }

    .book-actions {
        display: flex;
        gap: 6px;
        margin-top: 8px;
    }

    .btn-add-to-cart, .btn-borrow, .btn-buy-now {
        flex: 1;
        padding: 6px;
        border: none;
        border-radius: 6px;
        font-size: 0.75rem; /* Smaller font size */
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-add-to-cart {
        background-color: #007bff;
        color: #fff;
    }

        .btn-add-to-cart:hover {
            background-color: #0056b3;
        }

    .btn-borrow {
        background-color: #28a745;
        color: #fff;
    }

        .btn-borrow:hover {
            background-color: #218838;
        }

    .btn-buy-now {
        background-color: #dc3545;
        color: #fff;
    }

        .btn-buy-now:hover {
            background-color: #c82333;
        }
</style>

<h1>Books</h1>

<!-- Filter Form -->
<form method="get" asp-action="UserIndex">
    <div class="form-group">
        <label for="category">Filter by Category:</label>
        <select id="category" name="category" class="form-control">
            <option value="">All</option>
            @foreach (var category in ViewBag.Categories)
            {
                var isSelected = category == ViewBag.SelectedCategory ? "selected" : null;
                <option value="@category" selected="@isSelected">@category</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="searchQuery">Search:</label>
        <input type="text" id="searchQuery" name="searchQuery" class="form-control" value="@ViewBag.SearchQuery" onkeyup="searchBooks()" placeholder="Search for books...">
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<!-- Books List -->
<div id="bookList" class="book-list mt-4" style="display: flex; flex-wrap: wrap; gap: 16px;">
    @foreach (var book in Model)
    {
        <a asp-action="Details" asp-route-id="@book.BookId" class="book-card">
            <img src="@Url.Content("~/images/" + book.ImageUrl)" alt="@book.Title" />
            <div class="book-card-body">
                <h5 class="book-card-title">@book.Title</h5>
                <p class="book-card-description">@book.Description</p>
                <div class="book-card-meta">
                    <p><strong>Published:</strong> @book.YearPublished</p>
                    <p><strong>Category:</strong> @book.Category</p>
                </div>

                <!-- Discount Section -->
                @if (book.DiscountEndDate.HasValue && book.DiscountEndDate.Value > DateTime.Now)
                {
                    <div class="discount-section">
                        <p class="discount-timer">Discount ends in: <span id="countdown-@book.BookId"></span></p>
                        <p class="discount-percent">@book.DiscountPrice.Value% off</p>
                        <p class="original-price"><del>@((book.BuyPrice / (1 - (book.DiscountPrice.Value / 100))).ToString("c"))</del></p>
                    </div>
                }

                <!-- Pricing Section -->
                <div class="pricing-section">
                    <p class="borrow-price"><strong>Borrow Price:</strong> @book.BorrowPrice.ToString("c")</p>
                    <p class="buy-price"><strong>Buy Price:</strong> @book.BuyPrice.ToString("c")</p>
                </div>

                <!-- Action Buttons -->
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="book-actions">
                        <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post">
                            <input type="hidden" name="bookId" value="@book.BookId" />
                            <input type="hidden" name="isForBorrow" value="false" />
                            <button type="submit" class="btn btn-add-to-cart">Add to Cart</button>
                        </form>
                        <form asp-controller="ShoppingCart" asp-action="AddToCart" method="post">
                            <input type="hidden" name="bookId" value="@book.BookId" />
                            <input type="hidden" name="isForBorrow" value="true" />
                            <button type="submit" class="btn btn-borrow">Borrow</button>
                        </form>
                        <!-- Buy Now Button -->
                        <form asp-controller="Payment" asp-action="BuyNow" method="get">
                            <input type="hidden" name="bookId" value="@book.BookId" />
                            <button type="submit" class="btn btn-buy-now">Buy Now</button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        You must <a asp-controller="Account" asp-action="Login">log in</a> to buy or borrow books.
                    </div>
                }
            </div>
        </a>

        <script>
            // Countdown timer for each book
            function startCountdown(bookId, discountEndDate) {
                var countdownDate = new Date(discountEndDate).getTime();

                var x = setInterval(function () {
                    var now = new Date().getTime();
                    var distance = countdownDate - now;

                    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                    // Display the countdown
                    document.getElementById("countdown-" + bookId).innerHTML = days + "d " + hours + "h "
                        + minutes + "m " + seconds + "s ";

                    // If the countdown is finished
                    if (distance < 0) {
                        clearInterval(x);
                        document.getElementById("countdown-" + bookId).innerHTML = "EXPIRED";
                    }
                }, 1000);
            }

            // Start the countdown for each book
            @if (book.DiscountEndDate.HasValue)
            {
                <text>
                    startCountdown(@book.BookId, '@book.DiscountEndDate.Value.ToString("yyyy-MM-ddTHH:mm:ss")');
                </text>
            }
        </script>
    }
</div>

<script>
    function searchBooks() {
        var searchQuery = document.getElementById('searchQuery').value;
        var category = document.getElementById('category').value;

        $.ajax({
            url: '@Url.Action("UserIndex", "Book")',
            type: 'GET',
            data: { category: category, searchQuery: searchQuery },
            success: function (result) {
                $('#bookList').html(result);
            }
        });
    }
</script>