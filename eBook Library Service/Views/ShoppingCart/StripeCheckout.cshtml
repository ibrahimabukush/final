@{
    ViewData["Title"] = "Stripe Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h2>Stripe Checkout</h2>
            <hr />

            <!-- Stripe Payment Form -->
            <form id="payment-form">
                <div id="card-element">
                    <!-- A Stripe Element will be inserted here. -->
                </div>

                <!-- Used to display form errors. -->
                <div id="card-errors" role="alert"></div>

                <!-- Submit Payment Button -->
                <button id="submit-button" class="btn btn-primary mt-3">
                    Submit Payment
                </button>

                <!-- Cancel Button -->
                <a href="@Url.Action("PaymentCancel", "Payment")" class="btn btn-secondary mt-3">
                    Cancel
                </a>
            </form>
        </div>
    </div>
</div>

<!-- Include Stripe.js -->
<script src="https://js.stripe.com/v3/"></script>
<script>
    // Initialize Stripe with your publishable key
    var stripe = Stripe('@ViewBag.StripePublishableKey');
    var elements = stripe.elements();

    // Create an instance of the card Element
    var card = elements.create('card');

    // Add an instance of the card Element into the `card-element` div
    card.mount('#card-element');

    // Handle real-time validation errors from the card Element
    card.on('change', function (event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    // Handle form submission
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        // Disable the submit button to prevent multiple submissions
        document.getElementById('submit-button').disabled = true;

        // Confirm the payment with Stripe
        stripe.confirmCardPayment('@ViewBag.StripeClientSecret', {
            payment_method: {
                card: card,
            }
        }).then(function (result) {
            if (result.error) {
                // Show error to your customer
                var errorElement = document.getElementById('card-errors');
                errorElement.textContent = result.error.message;

                // Re-enable the submit button
                document.getElementById('submit-button').disabled = false;
            } else {
                // Payment succeeded, redirect to the appropriate success page
                var isBorrow = @Json.Serialize(ViewBag.IsBorrow); // Check if this is a borrow payment
                if (isBorrow) {
                    // Redirect to BorrowSuccess for borrow payments
                    window.location.href = '@Url.Action("BorrowSuccess", "Payment", new { bookId = ViewBag.BookId })';
                } else {
                    // Redirect to PaymentSuccess for Buy Now payments
                    window.location.href = '@Url.Action("PaymentSuccess", "Payment", new { bookId = ViewBag.BookId })';
                }
            }
        });
    });
</script>